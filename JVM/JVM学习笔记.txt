1.类在什么时候被初始化
	该类 new 一个对象的时候
	class.forName
	初始化他的子类的时候
	访问他的静态方法的时候
	访问或者对他的静态变量赋值的时候
	该类是一个启动类
	
	
2.JVM 分为哪几个部分
	虚拟机栈	线程私有的成员变量，堆中的引用
	本地方法栈	主要是 native 方法，调用JVM提供的本地方法库的对外API
	内存主堆	主要是 执行程序的所有对象
	程序计数器	记录程序的执行路径，包括所有的执行逻辑 线程 对象
	方法区(也成为no-heap)	之前会有常量池，class文件，静态等 内存中只有一份的东西
	执行引擎	程序主要的执行逻辑
	
	注：在 snapshot JVM中 虚拟机栈和本地方法栈合并在一起，区别不是很大，都是线程私有的程序空间
	
3.String.intern() 这是一个 native 方法
	一 在1.6及之前的 JVM 中，如果堆中有字符串对象，而常量池中没有该字符串，执行此方法则会 将堆中字符串复制到常量池中，然后返回 常量池的引用。 和堆中不是一个对象
	二 JAVA 1.7开始 如果堆中有字符串对象，而常量池中没有该字符串，执行此方法 会将堆中字符串对象的引用 复制到常量池中 然后返回 和堆中的字符串是同一个对象，常量池里面的相当于一个句柄，没有实际的意义
	注意：JAVA 1.7 有可能堆中有对个字符串对象 只是将字符串首次出现的引用复制到常量池中。
